@page "/viewshowings/{movieId}"

@inject IGetMovieByIdUseCase GetMovieByIdUseCase
@inject IGetFutureShowingsByMovieUseCase GetFutureShowingsByMovieUseCase
@inject IGetScreeningRoomByIdUseCase GetScreeningRoomByIdUseCase
@inject IGetReservationsByShowingIdUseCase GetReservationsByShowingIdUseCase
@inject NavigationManager NavigationManager

<div class="content">
    <div class="text2" style="padding: 5px 0px 25px">Seanse filmu "@movie.Title"</div>
        
    <div class="row">
        <div class="description">
            <span style="font-style: italic;">@movie.Description</span>
            <br />
            <br />
            Rok produkcji: @movie.Year
            <br />
            Długość: @movie.Length min.
            <br />
            Ograniczenie wiekowe:
            @if(movie.AgeRestriction <= 6)
            {
                <span class="age3_6">@(movie.AgeRestriction)+</span>
            }
            else if(movie.AgeRestriction >= 7 && movie.AgeRestriction <= 14)
            {
                <span class="age7_14">@(movie.AgeRestriction)+</span>
            }
            else if(movie.AgeRestriction >= 15 && movie.AgeRestriction <= 17)
            {
                <span class="age15_17">@(movie.AgeRestriction)+</span>
            }
            else
            {
                <span class="age18">@(movie.AgeRestriction)+</span>
            }
        </div>
        <img src="@movie.ImageUrl" alt="@movie.Title" style="height: 250px; width: 200px">
    </div>

    <br />
    @if(showings.Count() != 0)
    {
        @foreach(var date in dates)
        {
            <h3>@date.Date.ToString("dd/MM/yyyy")</h3>

                @foreach(var show in showings)
                {
                    
                    @if(show.Date.Date == date.Date.Date)
                    {
                        <div class="showing">
                            <div class="row" style="height: 50px;">
                                <div class="col" style="margin-top: 13px;">
                                    Godzina: @show.Date.ToString("HH:mm")
                                </div>
                                <div class="col" style="margin-top: 13px; width: 100px;">
                                    Wolne miejsca:
                                    @(GetScreeningRoomByIdUseCase.Execute(show.ScreeningRoomId).RowCount *
                                    GetScreeningRoomByIdUseCase.Execute(show.ScreeningRoomId).ColumnCount -
                                    @GetReservationsByShowingIdUseCase.Execute(show.ShowingId).Count())/@(
                                    GetScreeningRoomByIdUseCase.Execute(show.ScreeningRoomId).RowCount *
                                    GetScreeningRoomByIdUseCase.Execute(show.ScreeningRoomId).ColumnCount)
                                </div>
                                <div class="col" style="margin-top: 13px;">
                                    @if (show.Dubbing == true)
                                    {
                                        <span>Dubbing</span>
                                    }
                                </div>
                                <div class="col" style="margin-top: 13px;">
                                    Cena biletu: @show.TicketPrice zł
                                </div>
                                <AuthorizeView Policy="CashierOnly">
                                    <Authorized>
                                        <div class="col" style="margin-top: 5px;">
                                            @if(show.Date >= DateTime.Now)
                                            {
                                                <button type="button" class="btn" @onclick="@(() => ViewShowing(show.ShowingId))">Sprzedaj bilet</button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn" @onclick="@(() => ViewShowing(show.ShowingId))" disabled>Sprzedaj bilet</button>
                                            }
                                        </div>
                                    </Authorized>
                                    <NotAuthorized>
                                        <div class="col" style="margin-top: 5px;">
                                            @if(show.Date >= DateTime.Now)
                                            {
                                                <button type="button" class="btn" @onclick="@(() => ViewShowing(show.ShowingId))">Kup bilet</button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn" @onclick="@(() => ViewShowing(show.ShowingId))" disabled>Kup bilet</button>
                                            }
                                        </div>
                                    </NotAuthorized>
                                </AuthorizeView>
                            </div>
                        </div>
                        <br />
                    }
                    
                }
            
            <br />
        }

    }
    else
    {
        <div class="center">
            <h6>Przepraszamy, nie mogliśmy znaleźć seansów dla tego filmu.</h6>
        </div>
    }

    
</div>

@code 
{
    [Parameter]
    public string MovieId { get; set; }

    private Movie movie;

    private List<Showing> showings;

    private List<DateTime> dates;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        movie = new Movie();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if(int.TryParse(this.MovieId, out int iMovieId))
        {
            var m = GetMovieByIdUseCase.Execute(iMovieId);
            if(m != null)
            {
                this.movie = new Movie
                {
                    MovieId = m.MovieId,
                    Title = m.Title,
                    Description = m.Description,
                    Length = m.Length,
                    Year = m.Year,
                    AgeRestriction = m.AgeRestriction,
                    ImageUrl = m.ImageUrl
                };
            }
        }

        if(movie != null)
        {
            showings = GetFutureShowingsByMovieUseCase.Execute(movie)?.ToList();

            dates = new List<DateTime>();

            foreach(var show in showings)
            {
                dates.Add(show.Date.Date);
            }

            dates = dates.Distinct().ToList();
        }
    }

    private void ViewShowing(int showingId)
    {
        NavigationManager.NavigateTo($"/showing/{showingId}");
    }
}
