@page "/showingsarchive"
@attribute [Authorize(Policy = "AdminOnly")]

@inject NavigationManager NavigationManager
@inject IViewShowingsUseCase ViewShowingsUseCase
@inject IGetScreeningRoomByIdUseCase GetScreeningRoomByIdUseCase
@inject IGetMovieByIdUseCase GetMovieByIdUseCase
@inject IDeleteShowingUseCase DeleteShowingUseCase
@inject IGetPastShowingsUseCase GetPastShowingsUseCase

<div class="content">

    <div class="text2 center">Archiwum seansów</div>

    <button type="button" @onclick="ViewShowings" class="btn">Aktualne seanse</button>
    <br />
    <br />

    @if(showings != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Data</th>
                    <th>Film</th>
                    <th>Sala</th>
                    <th>Cena biletu</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach(var showing in showings)
                {
                    <tr class="table_row">
                        <td>@showing.Date.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>@GetMovieByIdUseCase.Execute(showing.MovieId)?.Title (@GetMovieByIdUseCase.Execute(showing.MovieId)?.Year)</td>
                        <td>@GetScreeningRoomByIdUseCase.Execute(showing.ScreeningRoomId)?.ScreeningRoomName</td>
                        <td>@Math.Round(showing.TicketPrice, 2) zł</td>
                        <td><button type="button" @onclick="@(() => ViewShowing(showing))" class="btn">Szczegóły</button></td>
                        <td><button type="button" @onclick="@(() => DeleteShowing(showing.ShowingId))" class="btn">Usuń</button></td>
                    </tr>
                }
            </tbody>
        </table>
    }

</div>

@code 
{
    private List<Showing> showings;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        LoadShowings();
    }

    private void LoadShowings()
    {
        showings = GetPastShowingsUseCase.Execute()?.ToList();
    }

    private void DeleteShowing(int screeningRoomID)
    {
        DeleteShowingUseCase.Delete(screeningRoomID);
        LoadShowings();
    }

    private void ViewShowing(Showing showing)
    {
        NavigationManager.NavigateTo($"/showing/{showing.ShowingId}");
    }

    private void ViewShowings()
    {
        NavigationManager.NavigateTo("/manageshowings");
    }
}
