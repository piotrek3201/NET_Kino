@inject IConfirmReservationUseCase ConfirmReservationUseCase
@inject IIsTicketValidUseCase IsTicketValidUseCase

<div style="color:@TextColor; background-color:@BackgroundColor" id=ticket>

    <br/><br/><br/>

    <h2>
        Twój bilet na film 
        <br/>
        "@Movie.Title"
    </h2>

    @if (purchase)
    {
        <p>
        Pokaż go pracownikowi kina sprawdzającemu bilety.
        <br />
        Możesz również podać kod biletu.
        </p>
    }
    else
    {
        <p>
            Twój bilet jest zarezerwowany na @Ticket.ClientMail.
            <br/>
            Rezerwacja jest ważna do 20 minut przed seansem.
            <br/> <br/>
            Przyjdź do kina i podaj kod biletu kasjerowi.
            <br/>
            Po zatwierdzeniu zakupu, bilet stanie się ważny. 
            <br>
            W przeciwnym wypadku system odrzuci bilet.
        </p>
    }

    <img src="@Ticket.QRStringImage" style="width:200px;height:200px;">
    <p style="color:palevioletred; font-size:large">@Ticket.QRString</p>

    <br/>
    <h2>Sala @Showing.ScreeningRoomId</h2>
    <p style="color:palegreen; font-size:large">
        @Showing.Date.ToShortDateString()
        <br/>
        @Showing.Date.ToShortTimeString() 
    </p>
    
    <br/>
    <h2>Siedzenia</h2>
    
    <p style="color:paleturquoise; font-size:large">
        @foreach (Reservation r in Reservations)
        {
            int c = r.ColumnNumber;
            char rLetter = (char)(r.RowNumber + 64);

            if(!firstItem) @separator // draw separator if not first item in line
            else firstItem = false;

            @rLetter@c //draw seat position name

            counter++; // incremenet line break variable
            // line breaks every now and then
            if (Reservations.Count() > 2 && counter >= Reservations.Count() / 2) 
            {
                counter = -1;
                firstItem = true;
                <br/>
            }
        }
        @if(true)
        {
            // reset variables for next page draw   
            firstItem = true;
            counter = 0;
        }
    </p>
    <br/>

    <AuthorizeView Policy="CashierOnly">
        <Authorized>
            @if (!purchase)
            {
                <button type="button" class="btn" @onclick="ConfirmPayment" 
                    disabled="@purchase">Zatwierdź płatność klienta</button>
                <br/>
            }
        </Authorized>
    </AuthorizeView>
    

</div>


@code {
    [Parameter]
    public Ticket Ticket { get; set; }

    [Parameter]
    public IEnumerable<Reservation> Reservations { get; set; }

    [Parameter]
    public Showing Showing { get; set; }

    [Parameter]
    public Movie Movie { get; set; }

    [Parameter]
    public string TextColor { get; set; }

    [Parameter]
    public string BackgroundColor { get; set; }

    int counter = 0;
    bool firstItem = true;
    string separator = " - ";
    bool purchase = false;

    private void ConfirmPayment()
    {
        Ticket.PurchaseDate = DateTime.Now;
        foreach (Reservation r in Reservations) ConfirmReservationUseCase.Execute(r, true);
        purchase = true;
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        //jezeli dowolna rezerwacja wygasa przed seansem, nie zaplacono za bilet
        if (IsTicketValidUseCase.Execute(Ticket)) purchase = true;
        else purchase = false;
    }
}
